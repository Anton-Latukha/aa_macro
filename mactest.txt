[style h1 <h1>[b]</h1>]  
[style h2 <h2>[b]</h2>]  
[style h3 <h3>[b]</h3>]  
[style test [b]]  
[style code <code>[b]</code>]  
[style hello Why hello, [b], how are you?]  
{h1 Test Results: aa_macro.py]

{h2 Text Formatting]
[mode 4.01s]  
[back 028]  
{h3 HTML 4.01s Mode:}
[p [b bold text]]
[p [i italic text]]
[p [u underlined text]]
[p [color 876 color3]]
[p [color fedcba color6]]
[mode 3.2]  
{h3 HTML 3.2 Mode:}
[p [u [i [b {hello Ben}]]]]
[p [color 876 color3]]
[p [color fedcba color6]]

{h2 linking}
[p [a http://fyngyrz.com]]
[p [a tab,http://fyngyrz.com]]
[p [a tab,http://fyngyrz.com,My Link]]
[p [a http://fyngyrz.com,My Other Link]]
[p [web http://fyngyrz.com]]
[p [web http://fyngyrz.com Another Link]]
[p [link http://fyngyrz.com]]
[p [link http://fyngyrz.com Another Link]]

{h2 Images}
{h3 No size, no local lookup so no relative path}
[p [img http://fyngyrz.com/images/beachflag.png http://fyngyrz.com]]
[p [img http://fyngyrz.com/images/beachflag.png]]
[p [img Beach Flag,http://fyngyrz.com/images/beachflag.png]]
[p [img Beach Flag,http://fyngyrz.com/images/beachflag.png http://fyngyrz.com]]

{h3 Size, identical (empty) relative path}
[p [locimg test.png http://fyngyrz.com]]
[p [locimg test.png]]
[p [locimg .png Test,test.png]]
[p [locimg .png Test,test.png http://fyngyrz.com]]

[p [locimg test.jpg http://fyngyrz.com]]
[p [locimg test.jpg]]
[p [locimg .jpg Test,test.jpg]]
[p [locimg .jpg Test,test.jpg http://fyngyrz.com]]

[p [locimg test.gif http://fyngyrz.com]]
[p [locimg test.gif]]
[p [locimg .gif Test,test.gif]]
[p [locimg .gif Test,test.gif http://fyngyrz.com]]

{h3 Size, relative path only}
[lipath ./]  
[p [locimg test.png http://fyngyrz.com]]
[p [locimg test.png]]
[p [locimg .png Test,test.png]]
[p [locimg .png Test,test.png http://fyngyrz.com]]

[p [locimg test.jpg http://fyngyrz.com]]
[p [locimg test.jpg]]
[p [locimg .jpg Test,test.jpg]]
[p [locimg .jpg Test,test.jpg http://fyngyrz.com]]

[p [locimg test.gif http://fyngyrz.com]]
[p [locimg test.gif]]
[p [locimg .gif Test,test.gif]]
[p [locimg .gif Test,test.gif http://fyngyrz.com]]

{h3 Size, relative path and http path}
[lipath ./]  
[p [locimg randomdir/test.png http://fyngyrz.com]]
[p [locimg randomdir/test.png]]
[p [locimg .png Test,randomdir/test.png]]
[p [locimg .png Test,randomdir/test.png http://fyngyrz.com]]

[p [locimg randomdir/test.jpg http://fyngyrz.com]]
[p [locimg randomdir/test.jpg]]
[p [locimg .jpg Test,randomdir/test.jpg]]
[p [locimg .jpg Test,randomdir/test.jpg http://fyngyrz.com]]

[p [locimg randomdir/test.gif http://fyngyrz.com]]
[p [locimg randomdir/test.gif]]
[p [locimg .gif Test,randomdir/test.gif]]
[p [locimg .gif Test,randomdir/test.gif http://fyngyrz.com]]

{h2 HTML Lists}
[style lwrap <u>[b]</u>]  
[p [ul item1,item2]]
[p [ul sep=|,item1|item2|item3]]
[p [ul wrap=lwrap,item1,item2]]
[p [ul wrap=lwrap,sep=|,itemW|itemX]]
[p [ul sep=|,wrap=lwrap,itemY|itemZ]]
[p [ol item1,item2]]
[p [iful item1]]
[p [iful item1,item2]]
[p [ifol item1]]
[p [ifol item1,item2]]
[p [t a,b,c]]
[p [t wrap=code,a,b,c]]
[p [t wrap=code,sep=|,d|e|f]]

{h2 Tables}
[table [row [header col 1][header col 2]][row [cell test1][cell test2]]]
[table border=0,[row [header bgcolor="#ffffff",col 1][header col 2]][row bgcolor="#888888",[cell test1][cell align="center", test2]]]

{h2 Variables}
[p 
[local foo bar][v foo]
[global bing bong][v bing]
[global foo bip][v foo][gv foo][lv foo]
[page][v foo][gv foo][lv foo] Hooray!
]

{h2 stack}
[p 
[push X]stack="[pop]"
[push X][push Y][push Z]stack="[pop]","[pop]",[pop]"
[push 3,bugger]stack="[pop]","[pop]","[pop]"
[push X][push Y][push Z][flush]stack="[pop]","[pop]","[pop]"
[push X][push Y][push Z]stack 1="[fetch 1]"[flush]
[push sep=|,5|five]"[pop]","[pop]","[pop]","[pop]","[pop]"
]

{h2 Math}
[p 
[add -1 6]
[sub 10 9]
[mul 3 5]
[div 72 9]
[inc 1]
[dec 10]
max 5 10 = [max 5 10]
max 9 4 = [max 9 4]
min 5 10 = [min 5 10]
min 4 9 = [min 4 9]
]

{h2 Conditionals}
[p 
[even 2 EVEN][even 1 !ODD!]
[odd 1 ODD][odd 2 !EVEN!]
[if bleep bleep Match][if foo bar !NO MATCH!]
[else foo bar No Match][else bleep bleep !MATCH!]
[ne something,Something][ne ,!EMPTY!]
[eq something,Something][ne ,!EMPTY!]
]

{h2 Parsing and text processing}
[style sdex [b] Soundex: [soundex [b]]]
[p
[slice 3:9,catmonkeydog]test2
[split |,foo|bar|bleep|blop]test3
[parm 0] [parm 1] [parm 2] [parm 3]test 4
[upper i was lower, but now am high]
[lower I WAS HIGHER, BUT NOW AM BROUGHT LOW]
I have a [upper [roman 427]] Hemi ox-cart
[chr 66][chr 69][chr 78]
[csep 1234567890]
[fcsep 12345678.90]
17 dec to hex: [dtohex 17]
 9 dec to oct: [dtooct 9]
 3 dec to bin: [dtobin 3]
11 hex to dec: [htodec 11]
11 oct to dec: [otodec 11]
11 bin to dec: [btodec 11]
[local cont this is a test
of the emergency broadcast system]
content:
[v cont]
lines: [lc [v cont]]
words: [wc [v cont]]
chars: [len [v cont]]
[lc]
[wc]
[len]
[b style [color f84 me]]
[i]
[u]
[local cont thaAAAaaas right all]
content: [v cont]
a: [count a,[v cont]]
aa: [count aa,[v cont]]
overlaps=yes,aa: [count overlaps=yes,aa,[v cont]]
sep=|,overlaps=yes,aa: [count sep=|,overlaps=yes,aa|[v cont]]
casesens=yes,aa: [count casesens=yes,aa,[v cont]]
casesens=yes,AA: [count casesens=yes,AA,[v cont]]
overlaps=yes,casesens=yes,AA: [count overlaps=yes,casesens=yes,AA,[v cont]]
sep=|,overlaps=yes,casesens=yes,AA: [count sep=|,overlaps=yes,casesens=yes,AA|[v cont]]
{sdex Knuth}
{sdex Asimov}
{sdex Clarke}
{sdex Einstein}
[local cont [color 567 testing [b 1 [i 2] 3]]]
content: [v cont]
stripped of tags: [strip [v cont]]
Hamcalls:
[hsort W3OZ Larry
N2MGA
AA7AS,Ben
w2jvm Harold
W2GGI Robert
N5CST!Johann!
KE4TP-Pete]
]

{h2 Data Lists}
[list slicetest,a,2,c,4,e,6,g,8]  
slicetest list: [dlist slicetest]
1 = [lslice 1,slicetest,sliceresult]  
[dlist sliceresult]
2:3 = [lslice 2:3,slicetest,sliceresult]  
[dlist sliceresult]
:4 = [lslice :4,slicetest,sliceresult]  
[dlist sliceresult]
4: = [lslice 4:,slicetest,sliceresult]  
[dlist sliceresult]
::-1 = [lslice ::-1,slicetest,sliceresult]  
[dlist sliceresult]
[list lowers,a,b,c]  
list length of a,b,c: [llen lowers]
[e lowers,2] [e lowers,1] [e lowers,0]
[list sep=|,uppers,A|B|C]  
[append uppers,amphetamine]  
[lset uppers,1,aircraft]  
[e uppers,2] [e uppers,1] [e uppers,0] [e uppers,3]
[dlist uppers]
[style quotes "[b]" ]  
[dlist style=quotes,uppers]
[cmap xlate]  
[e xlate,66]
[translate xlate,ALPHA]
[lset xlate,65,-a-]  
[translate xlate,ALPHA]
[list unsorted,larry,ben,Beth,alan,leroy]  
[dlist style=quotes,unsorted]
[asort unsorted]  
[dlist style=quotes,unsorted]
[aisort unsorted]  
[dlist style=quotes,unsorted]
[list sep=|,nunsorted,44,larry|1,ben|2,Beth|3,alan,smith|5,leroy]  
[dlist style=quotes,nunsorted]
[isort nunsorted]  
[dlist style=quotes,nunsorted]
[style nonquotes [splitcount 1][split [co],[b]]"[parm 1]" ]  
[dlist style=nonquotes,nunsorted]
[ltol nlist,line 1
line 2
line3]
[dlist nlist]
[list hamlist,W3OZ Larry,N2MGA,AA7AS Ben,w2jvm Harold,W2GGI Robert,N5CST!Johann!,KE4TP-Pete]  
[style hwrap [b][nl]]  
[local cbar 123456789 ]  
[local cont this is line one	
this is line two 
	this is line three
this is line    four and I'm really not kidding about this at all, no fooling, folks
and		 this is the last line]  

Word wrap at 72 columns
[dup 8,[v cbar]]
[wwrap 72,[v cont]]  

Word wrap at 31 columns
[dup 4,[v cbar]]
[wwrap 31,[v cont]]  

Word wrap at 72 columns, with style
[style mywrap ([b])[nl]]  
[dup 8,[v cbar]]
[wwrap wrap=mywrap,72,[v cont]]  

Word wrap at 31 columns, with style
[style mywrap ([b])[nl]]  
[dup 4,[v cbar]]
[wwrap wrap=mywrap,31,[v cont]]  

Unsorted list:
--------------
[dlist style=hwrap,hamlist]  

Sorted List:
------------
[lhsort hamlist]  
[dlist style=hwrap,hamlist]  

With nice interspersion:
------------------------
[list sep=|,myList,aa7as (Ben)|N5CST (Johann)|W3Oz (Larry)]  
[lhsort myList]  
[style hwrap [ne [v call],, ][b][local call [b]]]  
[local call]  
[dlist style=hwrap,myList]

{h2 Data Dictionaries}
[dict mydict,foo:bar,gee:whiz]'
gee="[d mydict,gee]"
foo="[d mydict,foo]"
bip="[d mydict,bip]"
resetting foo...\n[setd mydict,foo:guggle]'
foo="[d mydict,foo]"

{h2 Text Processing}
[dup 3,foo]
[rstrip testing 3   ]
[find ani,pusilanimous]
[find sep=|,we|and,then we said "no"]
[replace foo,bar,you foo this]
[replace sep=|,jim|larry|mark, jim, or leroy]
[rjust 6,-,four]
[rjust 6, ,three]
[rjust 6,&nbsp;,foo]
'[center 7,-,bar]' odd in odd, left side pad only
'[center -7,-,xyz]' odd in odd, pad both sides
'[center -7,-,wxyz]' even in odd, pad both sides
'[center -8,-,xyz]' odd in even, pad both sides
[capt joe and the dog]
[capt tropic OF consumption]
[capt joe and a dog]
[capw joe and a dog]
[caps joe and a dog]
[list cvt,HTML,Python,PHP]
[scase cvt,I prefer html, and python, to Html and php.]
[inter -,L,4,1234567890]
[inter -,R,4,1234567890]
[ssort fred
zander
larry
Marge
ben]
[sisort fred
zander
larry
Marge
ben]
[issort 5,fred
4,zander
2,larry
3,Marge
1,ben]

{h2 Miscellanea}
[p 
[repeat 5 five ]test1[comment Invisible Me]
]
[gstyle h3 Third-level title]
[p 
[ghost h3]
[ghost source=global,h3]
[ghost source=local,h3]
]
